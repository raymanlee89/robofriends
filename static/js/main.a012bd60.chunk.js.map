{"version":3,"sources":["components/Card.js","components/Card_list.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","Cardlist","robots","cardArray","map","user","i","Searchbox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,MAZf,SAAcC,GACV,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCMXC,MAXf,YAA4B,IAATC,EAAQ,EAARA,OACTC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAO,cAAC,EAAD,CAAcR,GAAII,EAAOI,GAAGR,GAAIC,KAAOG,EAAOI,GAAGP,KAAMC,MAAOE,EAAOI,GAAGN,OAA7DM,MAEtB,OACI,8BACKH,KCMEI,MAbf,YAA+C,EAA3BC,YAA4B,IAAfC,EAAc,EAAdA,aAC7B,OACI,qBAAKd,UAAU,MAAf,SACI,uBACIA,UAAU,kCACVe,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,MARf,SAAgBnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKvB,EAAMwB,YCiBJC,E,kDAnBX,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IACD0B,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAK9B,MAAMwB,a,GAhBEQ,aC6CbC,G,wDAvCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACTlB,OAAQ,GACR4B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACvB,OAAQmC,S,oBAO1C,WAAU,IAAD,EAC0Bb,KAAKJ,MAA5BlB,EADH,EACGA,OAAQ4B,EADX,EACWA,YACVQ,EAAed,KAAKJ,MAAMlB,OAAOqC,QAAO,SAAAC,GAC1C,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQvC,EAAOyC,OAGX,sBAAKhD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWc,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQoC,WAPlC,6C,GAzBUZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a012bd60.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Card(props){\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?200*200`}/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction Cardlist({robots}){\r\n    const cardArray = robots.map((user, i)=>{\r\n        return <Card key={i} id={robots[i].id} name ={robots[i].name} email={robots[i].email}/>;\r\n    })\r\n    return (\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nfunction Searchbox({searchField, searchChange}){\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lighest-blue' \r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nfunction Scroll(props){\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid white', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1>Ooops. That is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Card_list';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield} = this.state;\r\n        const filterRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ? \r\n        <h1>Loading</h1> : \r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <Searchbox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <Cardlist robots={filterRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}